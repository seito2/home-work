name: release

on:
  push:
    branches:
      - main # or master

defaults:
  run:
    working-directory: ./api-example

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: mysql://root:root@localhost:3306/demo
    services:
      db:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: demo
          MYSQL_USER: root
          MYSQL_PASSWORD: root
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-build-cache

      - name: run migration
        run: |
          cargo install sqlx-cli --no-default-features --features mysql
          sqlx migarate run --database ${{ env.DATABASE_URL }}

      - name: Release lambda
        run: |
          pip install cargo-lambda
          cargo lambda build --release --target x86_64-unknown-linux-musl
          cargo lambda deploy sample-rust-lambda
        env:
          AWS_DEFAULT_REGION: ap-southeast-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
